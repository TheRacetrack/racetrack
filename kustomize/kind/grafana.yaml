apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: racetrack
  name: grafana
  labels:
    app.kubernetes.io/name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      priorityClassName: high-priority
      containers:
        - name: grafana
          image: grafana/grafana:9.3.6
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          tty: true
          env:
            - name: GF_AUTH_BASIC_ENABLED
              value: 'false'
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: 'true'
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: 'Admin'
          volumeMounts:
            - name: grafana-config-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-config-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
      volumes:
        - name: grafana-config-datasources
          configMap:
            name: grafana-config
            items:
            - key: datasource.yml
              path: datasource.yml
        - name: grafana-config-dashboards
          configMap:
            name: grafana-config
            items:
            - key: all.yml
              path: all.yml
        - name: grafana-dashboards
          hostPath:
            path: /src/utils/grafana/dashboards

---
apiVersion: v1
kind: Service
metadata:
  namespace: racetrack
  name: grafana
  labels:
    app.kubernetes.io/name: grafana
spec:
  selector:
    app.kubernetes.io/name: grafana
  type: NodePort
  ports:
    - name: grafana
      nodePort: 30300
      port: 3000
      targetPort: 3000
