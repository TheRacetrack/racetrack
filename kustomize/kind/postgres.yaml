apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: racetrack
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      tier: postgres
  template:
    metadata:
      labels:
        tier: postgres
    spec:
      priorityClassName: high-priority
      volumes:
        - name: postgres-init-script
          configMap:
            name: postgres-init-script
      containers:
        - name: postgres
          image: postgres:13.1
          envFrom:
            - configMapRef:
                name: postgres-env
          ports:
            - containerPort: 5432
              name: postgresdb
          volumeMounts:
            - name: postgresdb
              mountPath: /var/lib/postgresql/data
              subPath: postgres
            - name: postgres-init-script
              mountPath: /docker-entrypoint-initdb.d/
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 20
          readinessProbe:
            exec:
              command: ["pg_isready", "-h", "localhost", "-p", "5432", "-U", "racetrack", "-d", "racetrack"]
            initialDelaySeconds: 5
            periodSeconds: 10

        - name: pgbouncer
          image: kind-registry:5000/racetrack/pgbouncer:latest
          envFrom:
            - configMapRef:
                name: postgres-env
            - configMapRef:
                name: pgbouncer-env
          ports:
            - containerPort: 5433
              name: pgbouncer

        - name: postgres-exporter
          image: quay.io/prometheuscommunity/postgres-exporter:v0.10.0
          envFrom:
            - configMapRef:
                name: pgbouncer-env
          ports:
            - containerPort: 9187
              name: prometheus

  volumeClaimTemplates:
    - metadata:
        name: postgresdb
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 500Mi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: racetrack
  labels:
    tier: postgres
spec:
  selector:
    tier: postgres
  type: ClusterIP
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: pgbouncer
  namespace: racetrack
  labels:
    tier: postgres
spec:
  selector:
    tier: postgres
  type: ClusterIP
  ports:
    - name: pgbouncer
      port: 5433
      targetPort: 5433
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-script
  namespace: racetrack
data:
  db.sql: |
    -- should be the same as in postgres/init.sql --

    CREATE USER racetrack WITH ENCRYPTED PASSWORD 'dev-25ZjbUDJH6MzmUR';
    GRANT ALL PRIVILEGES ON DATABASE racetrack TO racetrack;

---
apiVersion: v1
kind: Service
metadata:
  namespace: racetrack
  name: postgres-exporter
  labels:
    app.kubernetes.io/name: postgres-exporter
spec:
  selector:
    tier: postgres
  type: ClusterIP
  ports:
    - name: prometheus
      port: 9187
      targetPort: 9187
